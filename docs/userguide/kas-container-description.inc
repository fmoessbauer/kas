The ``kas-container`` script is a wrapper to run `kas` inside a build container.
It gives fine grained control over the data that is mapped into the build and
decouples the build environment from the host system. The wrapper also takes care of
mounting the necessary directories and setting up the environment variables.

.. note::
    The ``kas-container`` script has limited support for Git worktrees. Regular
    Git operations on the checked-out repository are supported. However, executing
    any ``git worktree ...`` command inside the container is not allowed.

By default ``kas-container`` uses the official images provided by the kas project:
``ghcr.io/siemens/kas/kas[-isar]:<version>``. To specify your own image set the
``KAS_CONTAINER_IMAGE`` environment variable. As container backends, Docker and
Podman are supported. To force the use of podman over docker, set
``KAS_CONTAINER_ENGINE=podman``. For details, see :ref:`env-vars-label`.

Running under docker in `rootless mode <https://docs.docker.com/engine/security/rootless/>`_
is partially supported and requires a distinct ``KAS_WORK_DIR`` outside of the
calling directory (repo-dir). Only operations that work on a read only repo-dir are
supported. Other operations (like ``kas shell``) are partially supported but require
adding the ``--repo-ro`` option. The ``KAS_WORK_DIR`` is exclusively managed by the
tooling inside the container and must not be written to from the host.

.. note::
    The ISAR build system is not compatible with rootless execution. By that,
    we fall back to the system docker or podman instance.
